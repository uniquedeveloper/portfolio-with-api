export const DivvyIdl = {
  version: '0.27.0',
  name: 'divvy_house',
  instructions: [
    {
      name: 'initialize',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'houseMint', isMut: false, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'foreman', type: 'publicKey' },
        { name: 'beneficiary', type: 'publicKey' },
        { name: 'beneficiaryFeeBps', type: 'u16' },
        { name: 'dvypassFeeBps', type: 'u16' },
      ],
    },
    {
      name: 'deposit',
      accounts: [
        { name: 'user', isMut: false, isSigner: true },
        {
          name: 'userPoolToken',
          isMut: true,
          isSigner: false,
          isOptional: true,
        },
        { name: 'houseMint', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [{ name: 'amount', type: 'u64' }],
    },
    {
      name: 'withdraw',
      accounts: [
        { name: 'user', isMut: false, isSigner: true },
        { name: 'userPoolToken', isMut: true, isSigner: false },
        { name: 'houseMint', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [{ name: 'amount', type: 'u64' }],
    },
    {
      name: 'createDepositPosition',
      accounts: [
        { name: 'user', isMut: false, isSigner: true },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'amount', type: 'u64' },
        { name: 'minAmountOut', type: 'u64' },
      ],
    },
    {
      name: 'closeDepositPosition',
      accounts: [
        { name: 'user', isMut: true, isSigner: false },
        { name: 'userPoolToken', isMut: true, isSigner: false },
        { name: 'houseMint', isMut: true, isSigner: false },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'cancelDepositPosition',
      accounts: [
        { name: 'user', isMut: true, isSigner: true },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'createWithdrawPosition',
      accounts: [
        { name: 'user', isMut: false, isSigner: true },
        { name: 'userPoolToken', isMut: true, isSigner: false },
        { name: 'housePoolToken', isMut: true, isSigner: false },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'amount', type: 'u64' },
        { name: 'minAmountOut', type: 'u64' },
      ],
    },
    {
      name: 'closeWithdrawPosition',
      accounts: [
        { name: 'user', isMut: true, isSigner: false },
        { name: 'housePoolToken', isMut: true, isSigner: false },
        { name: 'houseMint', isMut: true, isSigner: false },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'cancelWithdrawPosition',
      accounts: [
        { name: 'user', isMut: true, isSigner: true },
        { name: 'userPoolToken', isMut: true, isSigner: false },
        { name: 'housePoolToken', isMut: true, isSigner: false },
        { name: 'position', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'closeGame',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'game', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'rentCollector', isMut: true, isSigner: false },
      ],
      args: [{ name: 'profitAmount', type: 'u64' }],
    },
    {
      name: 'updateBetV2',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'bet', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [
        { name: 'status', type: { defined: 'BetStatus' } },
        { name: 'isHalf', type: { option: 'bool' } },
      ],
    },
    {
      name: 'closeBetV2',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'bet', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'rentCollector', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'createSlipV3',
      accounts: [
        { name: 'bettor', isMut: true, isSigner: true },
        { name: 'slip', isMut: true, isSigner: false },
        { name: 'bet', isMut: true, isSigner: false },
        { name: 'game', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        {
          name: 'foreman',
          isMut: false,
          isSigner: true,
          docs: [
            'offchain data provider',
            'foreman signs off transaction to ensure given max_amount, min_amount, payout_amount are provided by him',
          ],
        },
        { name: 'payer', isMut: true, isSigner: true },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'gameId', type: 'u64' },
        { name: 'typeId', type: 'u16' },
        { name: 'points', type: 'i64' },
        { name: 'createdTs', type: 'u32' },
        { name: 'odds', type: 'u32' },
        { name: 'betAmount', type: 'u64' },
        { name: 'maxLockedLiquidity', type: 'u64' },
        { name: 'unitLockedLiquidity', type: 'u64' },
        { name: 'unitOffset', type: 'u16' },
        { name: 'oddsOffset', type: { option: 'i32' } },
        { name: 'remainingOdds', type: { vec: 'u32' } },
      ],
    },
    {
      name: 'closeSlip',
      accounts: [
        { name: 'bettor', isMut: true, isSigner: false },
        { name: 'slip', isMut: true, isSigner: false },
        { name: 'bet', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'createParlay',
      accounts: [
        { name: 'bettor', isMut: true, isSigner: true },
        { name: 'parlay', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        {
          name: 'foreman',
          isMut: false,
          isSigner: true,
          docs: [
            'offchain data provider',
            'foreman signs off transaction to ensure given max_amount, min_amount, payout_amount are provided by him',
          ],
        },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'slipId', type: 'u64' },
        { name: 'odds', type: 'u32' },
        { name: 'betAmount', type: 'u64' },
      ],
    },
    {
      name: 'closeParlay',
      accounts: [
        { name: 'bettor', isMut: true, isSigner: false },
        { name: 'parlay', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        {
          name: 'foreman',
          isMut: false,
          isSigner: true,
          docs: [
            'offchain data provider',
            'foreman signs off transaction to ensure given max_amount, min_amount, payout_amount are provided by him',
          ],
        },
      ],
      args: [{ name: 'payoutAmount', type: 'u64' }],
    },
    {
      name: 'createDvypassV2',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'emission', isMut: true, isSigner: false },
        { name: 'mint', isMut: false, isSigner: false },
        { name: 'metadata', isMut: true, isSigner: false },
        { name: 'edition', isMut: false, isSigner: false },
        { name: 'token', isMut: true, isSigner: false },
        { name: 'tokenRecord', isMut: true, isSigner: false },
        { name: 'authRules', isMut: false, isSigner: false },
        { name: 'authRulesProgram', isMut: false, isSigner: false },
        { name: 'sysvarInstructions', isMut: false, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
        { name: 'metadataProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'closeDvypassV2',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'emission', isMut: true, isSigner: false },
        { name: 'mint', isMut: false, isSigner: false },
        { name: 'metadata', isMut: true, isSigner: false },
        { name: 'edition', isMut: false, isSigner: false },
        { name: 'token', isMut: true, isSigner: false },
        { name: 'tokenRecord', isMut: true, isSigner: false },
        { name: 'authRules', isMut: false, isSigner: false },
        { name: 'authRulesProgram', isMut: false, isSigner: false },
        { name: 'sysvarInstructions', isMut: false, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
        { name: 'metadataProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'stakeDvypass',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'metadata', isMut: false, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'reward', isMut: true, isSigner: false },
        { name: 'stake', isMut: true, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'unstakeDvypass',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'stake', isMut: true, isSigner: false },
        { name: 'reward', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'claimDvypass',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: true, isSigner: false },
        { name: 'reward', isMut: true, isSigner: false },
        {
          name: 'authorityToken',
          isMut: true,
          isSigner: false,
          isOptional: true,
        },
        { name: 'vaultToken', isMut: true, isSigner: false, isOptional: true },
        {
          name: 'tokenProgram',
          isMut: false,
          isSigner: false,
          isOptional: true,
        },
        {
          name: 'systemProgram',
          isMut: false,
          isSigner: false,
          isOptional: true,
        },
      ],
      args: [],
    },
    {
      name: 'closeDvypass',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'mint', isMut: false, isSigner: false },
        { name: 'metadata', isMut: true, isSigner: false },
        { name: 'edition', isMut: false, isSigner: false },
        { name: 'token', isMut: true, isSigner: false },
        { name: 'tokenRecord', isMut: true, isSigner: false },
        { name: 'authRules', isMut: false, isSigner: false },
        { name: 'authRulesProgram', isMut: false, isSigner: false },
        { name: 'sysvarInstructions', isMut: false, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
        { name: 'metadataProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'claimDvypassEmission',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'dvypass', isMut: true, isSigner: false },
        { name: 'emission', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'sourceToken', isMut: true, isSigner: false },
        { name: 'destToken', isMut: true, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'createDvypassEmission',
      accounts: [
        { name: 'foreman', isMut: false, isSigner: true },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'payer', isMut: true, isSigner: true },
        { name: 'emission', isMut: true, isSigner: false },
        { name: 'metadata', isMut: false, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [
        { name: 'emissionsReleased', type: 'u64' },
        { name: 'emissionsRate', type: 'u64' },
      ],
    },
    {
      name: 'createMiner',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'rewarder', isMut: false, isSigner: false },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'depositMiner',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'rewarderAuthority', isMut: false, isSigner: false },
        { name: 'rewarder', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'minerToken', isMut: true, isSigner: false },
        { name: 'rewarderToken', isMut: true, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [{ name: 'amount', type: 'u64' }],
    },
    {
      name: 'withdrawMiner',
      accounts: [
        { name: 'authority', isMut: false, isSigner: true },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'rewarderAuthority', isMut: false, isSigner: false },
        { name: 'rewarder', isMut: true, isSigner: false },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'minerToken', isMut: true, isSigner: false },
        { name: 'rewarderToken', isMut: true, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'createRevshareMiner',
      accounts: [
        { name: 'payer', isMut: true, isSigner: true },
        { name: 'revshare', isMut: true, isSigner: false },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'revshareMiner', isMut: true, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'updateRevshareMiner',
      accounts: [
        { name: 'revshare', isMut: true, isSigner: false },
        { name: 'miner', isMut: false, isSigner: false },
        { name: 'revshareMiner', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'closeRevshareMiner',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'revshare', isMut: true, isSigner: false },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'revshareMiner', isMut: true, isSigner: false },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'claimRevshareMiner',
      accounts: [
        { name: 'authority', isMut: true, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'rewarder', isMut: true, isSigner: false },
        { name: 'revshare', isMut: true, isSigner: false },
        { name: 'miner', isMut: true, isSigner: false },
        { name: 'revshareMiner', isMut: true, isSigner: false },
        { name: 'tokenProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'changeAdmin',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newAdmin', type: 'publicKey' }],
    },
    {
      name: 'changeForeman',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newForeman', type: 'publicKey' }],
    },
    {
      name: 'changeBeneficiary',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newBeneficiary', type: 'publicKey' }],
    },
    {
      name: 'changeBeneficiaryFee',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newBeneficiaryFeeBps', type: 'u16' }],
    },
    {
      name: 'changeDvypassFee',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newDvypassFeeBps', type: 'u16' }],
    },
    {
      name: 'changeDvypass',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newDvypass', type: 'publicKey' }],
    },
    {
      name: 'changeMaxUtilization',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newMaxUtilizationBps', type: 'u16' }],
    },
    {
      name: 'pause',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'unpause',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'kaminoInit',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'delegateAuthority', isMut: false, isSigner: false },
        { name: 'reserve', isMut: false, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newMaxDelegateBps', type: 'u16' }],
    },
    {
      name: 'kaminoUpdateMaxDelegate',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
      ],
      args: [{ name: 'newMaxDelegateBps', type: 'u16' }],
    },
    {
      name: 'kaminoUpdateDelegateAuthority',
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: false, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
      ],
      args: [{ name: 'delegateAuthority', type: 'publicKey' }],
    },
    {
      name: 'kaminoClose',
      accounts: [
        { name: 'delegateAuthority', isMut: false, isSigner: true },
        { name: 'rentCollector', isMut: true, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'kaminoClaimRewards',
      accounts: [
        { name: 'reserve', isMut: false, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: false, isSigner: false },
        { name: 'houseCollateralToken', isMut: false, isSigner: false },
      ],
      args: [],
    },
    {
      name: 'kaminoDepositReserveLiquidity',
      accounts: [
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: true, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
        { name: 'delegateAuthority', isMut: false, isSigner: true },
        { name: 'reserve', isMut: true, isSigner: false },
        { name: 'lendingMarket', isMut: false, isSigner: false },
        { name: 'lendingMarketAuthority', isMut: false, isSigner: false },
        { name: 'reserveLiquidityMint', isMut: true, isSigner: false },
        { name: 'reserveLiquiditySupply', isMut: true, isSigner: false },
        { name: 'reserveCollateralMint', isMut: true, isSigner: false },
        { name: 'userSourceLiquidity', isMut: true, isSigner: false },
        { name: 'userDestinationCollateral', isMut: true, isSigner: false },
        { name: 'collateralTokenProgram', isMut: false, isSigner: false },
        { name: 'liquidityTokenProgram', isMut: false, isSigner: false },
        { name: 'instructionSysvarAccount', isMut: false, isSigner: false },
        { name: 'kaminoLendingProgram', isMut: false, isSigner: false },
      ],
      args: [{ name: 'amount', type: 'u64' }],
    },
    {
      name: 'kaminoRedeemReserveCollateral',
      accounts: [
        { name: 'house', isMut: true, isSigner: false },
        { name: 'houseAuthority', isMut: true, isSigner: false },
        { name: 'strategy', isMut: true, isSigner: false },
        { name: 'delegateAuthority', isMut: false, isSigner: true },
        { name: 'reserve', isMut: true, isSigner: false },
        { name: 'lendingMarket', isMut: false, isSigner: false },
        { name: 'lendingMarketAuthority', isMut: false, isSigner: false },
        { name: 'reserveLiquidityMint', isMut: true, isSigner: false },
        { name: 'reserveCollateralMint', isMut: true, isSigner: false },
        { name: 'reserveLiquiditySupply', isMut: true, isSigner: false },
        { name: 'userSourceCollateral', isMut: true, isSigner: false },
        { name: 'userDestinationLiquidity', isMut: true, isSigner: false },
        { name: 'collateralTokenProgram', isMut: false, isSigner: false },
        { name: 'liquidityTokenProgram', isMut: false, isSigner: false },
        { name: 'instructionSysvarAccount', isMut: false, isSigner: false },
        { name: 'kaminoLendingProgram', isMut: false, isSigner: false },
      ],
      args: [{ name: 'amount', type: 'u64' }],
    },
    {
      name: 'reallocateHouseAccount',
      docs: ['reallocate house account size to store more data'],
      accounts: [
        { name: 'admin', isMut: false, isSigner: true },
        { name: 'house', isMut: true, isSigner: false },
        { name: 'payer', isMut: true, isSigner: true },
        { name: 'systemProgram', isMut: false, isSigner: false },
      ],
      args: [],
    },
  ],
  accounts: [
    {
      name: 'BetV2',
      docs: ['Betting type given an event'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'gameId', type: 'u64' },
          { name: 'typeId', type: 'u16' },
          { name: 'points', type: 'i64' },
          { name: 'betAmount', docs: ['total bet amount'], type: 'u64' },
          {
            name: 'payoutAmount',
            docs: ['total payout amount if win'],
            type: 'u64',
          },
          { name: 'activeSlips', docs: ['unique bettors'], type: 'u32' },
          { name: 'status', docs: ['result'], type: { defined: 'BetStatus' } },
          {
            name: 'isHalf',
            docs: ['half win or half lose for Asian Handicap'],
            type: 'bool',
          },
        ],
      },
    },
    {
      name: 'Kamino',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'delegateAuthority', type: 'publicKey' },
          { name: 'maxDelegateBps', type: 'u16' },
          { name: 'delegatedAmount', type: 'u64' },
          { name: 'interestAmount', type: 'u64' },
          { name: 'reserve', type: 'publicKey' },
        ],
      },
    },
    {
      name: 'DvypassV2',
      type: {
        kind: 'struct',
        fields: [
          { name: 'authority', type: 'publicKey' },
          { name: 'mint', type: 'publicKey' },
          { name: 'bump', type: 'u8' },
          { name: 'activeStakes', type: 'u8' },
        ],
      },
    },
    {
      name: 'DvypassReward',
      docs: ['PDA - seeded by authority, house'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'rewardBeforeStake', type: 'u64' },
          { name: 'rewardClaimed', type: 'u64' },
          { name: 'rewardEarned', type: 'u64' },
          { name: 'stakes', type: 'u16' },
          { name: 'bump', type: 'u8' },
        ],
      },
    },
    {
      name: 'DvypassStake',
      docs: ['PDA - seeded by dvypass, house'],
      type: { kind: 'struct', fields: [{ name: 'bump', type: 'u8' }] },
    },
    {
      name: 'DvypassEmission',
      docs: ['PDA - seeded by dvypass'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'emissionsReleased', type: 'u64' },
          { name: 'emissionsClaimed', type: 'u64' },
          { name: 'emissionsRate', type: 'u64' },
          { name: 'startTimestamp', type: 'u32' },
          { name: 'bump', type: 'u8' },
        ],
      },
    },
    {
      name: 'Dvypass',
      docs: ['V1 (deprecated)'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'authority', type: 'publicKey' },
          { name: 'mint', type: 'publicKey' },
          { name: 'bump', type: 'u8' },
        ],
      },
    },
    {
      name: 'Game',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'gameId', type: 'u64' },
          { name: 'maxPayoutAmount', docs: ['max payout amount'], type: 'u64' },
          { name: 'betAmount', docs: ['total bet amount'], type: 'u64' },
        ],
      },
    },
    {
      name: 'House',
      type: {
        kind: 'struct',
        fields: [
          {
            name: 'admin',
            docs: ['authority of the house'],
            type: 'publicKey',
          },
          {
            name: 'foreman',
            docs: ['offchain relayer authority'],
            type: 'publicKey',
          },
          {
            name: 'beneficiary',
            docs: ['beneficiary account where profit fees go'],
            type: 'publicKey',
          },
          {
            name: 'houseMint',
            docs: ['SPL token mint as a collateral asset'],
            type: 'publicKey',
          },
          {
            name: 'currency',
            docs: ['SPL token mint or NATIVE token (SOL)'],
            type: 'publicKey',
          },
          { name: 'currencyDecimals', docs: ['decimals'], type: 'u8' },
          { name: 'beneficiaryFeeBps', docs: ['i.e. 100 = 1%'], type: 'u16' },
          { name: 'dvypassFeeBps', type: 'u16' },
          { name: 'maxUtilizationBps', type: 'u16' },
          {
            name: 'houseTokenSupply',
            docs: ['house token supply'],
            type: 'u64',
          },
          { name: 'liquidity', docs: ['house pool liquidity'], type: 'u64' },
          { name: 'maxPayoutAmount', type: 'u64' },
          { name: 'betAmount', type: 'u64' },
          { name: 'activeSlips', type: 'u64' },
          {
            name: 'authorityBump',
            docs: ['vault authority PDA bump'],
            type: 'u8',
          },
          { name: 'paused', docs: ['emergency pause'], type: 'bool' },
          { name: 'beneficiaryLiquidity', docs: ['profits'], type: 'u64' },
          { name: 'dvypassLiquidity', type: 'u64' },
          { name: 'dvypassRewardRemaining', type: 'u64' },
          { name: 'dvypassRewardPerStake', type: 'u64' },
          { name: 'dvypassTotalStake', type: 'u16' },
          { name: 'dvypassNextTotalStake', type: 'u16' },
          { name: 'dvypassCollection', type: { option: 'publicKey' } },
          {
            name: 'utilizedAmount',
            docs: ['total utilized amount'],
            type: 'u64',
          },
        ],
      },
    },
    {
      name: 'Parlay',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'slipId', type: 'u64' },
          { name: 'payoutAmount', docs: ['payout amount'], type: 'u64' },
          { name: 'betAmount', docs: ['total bet amount'], type: 'u64' },
          { name: 'bump', type: 'u8' },
        ],
      },
    },
    {
      name: 'Position',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'user', type: 'publicKey' },
          { name: 'amount', type: 'u64' },
          { name: 'minAmountOut', type: 'u64' },
          { name: 'createdTs', type: 'u32' },
          { name: 'status', type: { defined: 'PositionStatus' } },
        ],
      },
    },
    {
      name: 'Rewarder',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'startTimestamp', type: 'i64' },
          { name: 'endTimestamp', type: 'i64' },
          { name: 'authorityBump', type: 'u8' },
          { name: 'totalActiveMiners', type: 'u64' },
          { name: 'minAmount', type: 'u64' },
          { name: 'totalAmount', type: 'u64' },
          { name: 'totalRewards', type: 'u64' },
          { name: 'rewardsPerToken', type: 'u128' },
        ],
      },
    },
    {
      name: 'Revshare',
      type: {
        kind: 'struct',
        fields: [
          { name: 'rewarder', type: 'publicKey' },
          { name: 'createdTimestamp', type: 'i64' },
          { name: 'lastUpdatedTimestamp', type: 'i64' },
          { name: 'totalAmounts', type: 'u64' },
          { name: 'totalWeightsLost', type: 'u128' },
          { name: 'rewardsPerWeight', type: 'u128' },
        ],
      },
    },
    {
      name: 'Miner',
      docs: ['PDA'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'isBoosted', type: 'bool' },
          { name: 'rewarder', type: 'publicKey' },
          { name: 'authority', type: 'publicKey' },
          { name: 'amount', type: 'u64' },
          { name: 'rewards', type: 'u64' },
          { name: 'revshares', type: 'u8' },
        ],
      },
    },
    {
      name: 'RevshareMiner',
      docs: ['PDA'],
      type: {
        kind: 'struct',
        fields: [
          { name: 'miner', type: 'publicKey' },
          { name: 'revshare', type: 'publicKey' },
          { name: 'weightsLost', type: 'u128' },
          { name: 'amount', type: 'u64' },
          { name: 'rewardsClaimed', type: 'u64' },
        ],
      },
    },
    {
      name: 'Slip',
      docs: ["Bettor's receipt given a betting option"],
      type: {
        kind: 'struct',
        fields: [
          { name: 'bettor', type: 'publicKey' },
          { name: 'house', type: 'publicKey' },
          { name: 'gameId', type: 'u64' },
          { name: 'typeId', type: 'u16' },
          { name: 'points', type: 'i64' },
          { name: 'createdTs', docs: ['unix timestamp'], type: 'u32' },
          { name: 'betAmount', docs: ['total bet amount'], type: 'u64' },
          {
            name: 'payoutAmount',
            docs: ['total payout amount if win'],
            type: 'u64',
          },
        ],
      },
    },
  ],
  types: [
    {
      name: 'BetUpdatedData',
      type: {
        kind: 'struct',
        fields: [
          { name: 'house', type: 'publicKey' },
          { name: 'gameId', type: 'u64' },
          { name: 'typeId', type: 'u16' },
          { name: 'points', type: 'i64' },
          { name: 'betAmount', type: 'u64' },
          { name: 'payoutAmount', type: 'u64' },
          { name: 'activeSlips', type: 'u32' },
          { name: 'status', type: { defined: 'BetStatus' } },
          { name: 'isHalf', type: 'bool' },
        ],
      },
    },
    {
      name: 'GameUpdatedData',
      type: {
        kind: 'struct',
        fields: [
          { name: 'maxPayoutAmount', type: 'u64' },
          { name: 'betAmount', type: 'u64' },
        ],
      },
    },
    {
      name: 'HouseUpdatedData',
      type: {
        kind: 'struct',
        fields: [
          { name: 'houseTokenSupply', type: 'u64' },
          { name: 'liquidity', type: 'u64' },
          { name: 'maxPayoutAmount', type: 'u64' },
          { name: 'betAmount', type: 'u64' },
          { name: 'activeSlips', type: 'u64' },
          { name: 'paused', type: 'bool' },
          { name: 'beneficiaryLiquidity', type: 'u64' },
          { name: 'dvypassLiquidity', type: 'u64' },
          { name: 'dvypassRewardRemaining', type: 'u64' },
          { name: 'dvypassRewardPerStake', type: 'u64' },
          { name: 'dvypassTotalStake', type: 'u16' },
          { name: 'dvypassNextTotalStake', type: 'u16' },
          { name: 'utilizedAmount', type: 'u64' },
        ],
      },
    },
    {
      name: 'BetStatus',
      type: {
        kind: 'enum',
        variants: [
          { name: 'Open' },
          { name: 'Closed' },
          { name: 'Win' },
          { name: 'Lose' },
          { name: 'Push' },
        ],
      },
    },
    {
      name: 'PositionStatus',
      type: {
        kind: 'enum',
        variants: [{ name: 'Deposit' }, { name: 'Withdraw' }],
      },
    },
  ],
  events: [
    {
      name: 'BetUpdatedEvent',
      fields: [
        { name: 'pubkey', type: 'publicKey', index: false },
        { name: 'data', type: { defined: 'BetUpdatedData' }, index: false },
      ],
    },
    {
      name: 'GameUpdatedEvent',
      fields: [
        { name: 'pubkey', type: 'publicKey', index: false },
        { name: 'data', type: { defined: 'GameUpdatedData' }, index: false },
      ],
    },
    {
      name: 'HouseUpdatedEvent',
      fields: [
        { name: 'pubkey', type: 'publicKey', index: false },
        { name: 'data', type: { defined: 'HouseUpdatedData' }, index: false },
      ],
    },
  ],
  errors: [
    { code: 6000, name: 'Paused', msg: 'House is paused' },
    {
      code: 6001,
      name: 'InsufficientLiquidity',
      msg: 'Insufficient house liquidity',
    },
    { code: 6002, name: 'InsufficientBalance', msg: 'Insufficient balance' },
    { code: 6003, name: 'DepositDisabled', msg: 'Deposit is disabled' },
    { code: 6004, name: 'WithdrawDisabled', msg: 'Withdraw is disabled' },
    {
      code: 6005,
      name: 'BetAlreadySettled',
      msg: 'The bet is already settled',
    },
    { code: 6006, name: 'BetNotSettled', msg: 'The bet is not settled yet' },
    { code: 6007, name: 'BetAlreadyClosed', msg: 'The bet is already closed' },
    {
      code: 6008,
      name: 'PayoutNotFinished',
      msg: 'The payout is not finished yet',
    },
    { code: 6009, name: 'BetAmountInvalid', msg: 'The bet amount is invalid' },
    {
      code: 6010,
      name: 'PayoutAmountInvalid',
      msg: 'The payout amount is invalid',
    },
    {
      code: 6011,
      name: 'MaxLockedLiquidityExceeded',
      msg: 'Max locked liquidity exceeded',
    },
    { code: 6012, name: 'InvalidDvypass', msg: 'Invalid DVYPASS' },
    { code: 6013, name: 'OddsOffsetChanged', msg: 'The odds offset changed' },
    {
      code: 6014,
      name: 'MinimumSlippageExceeded',
      msg: 'Minimum slippage exceeded',
    },
  ],
};
